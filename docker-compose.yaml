services:
  postgres:
    image: postgres:latest
    restart: always
    env_file:
       - '.variables.env'
    volumes:
      - postgres_data:/data

  frontend:
    restart: unless-stopped
    environment:
      PUBLIC_KERNEL_ORIGIN: http://backend
      PG_CONNECTION_STRING: postgres://user:password@postgres:5432/spectral_db
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules/
    expose:
      - "5173"
    depends_on:
      - backend

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend

  backend:
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    stop_grace_period: 500ms
    volumes:
      - ./backend:/backend
    expose:
      - "8000"
    depends_on:
      - postgres
    env_file:
       - '.variables.env'
       - '.apikeys.env'
      

volumes:
  postgres_data:

networks:
  default:
    external: false

